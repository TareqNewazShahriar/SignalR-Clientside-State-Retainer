/* 
 * SignalR State Manager v1.2
 * Released under Apache License
 * This plugin needs jQuery [http://www.jquery.com], just like SignalR.
 * Date: Thu Apr 16 2015 00:43:05 GMT+0600 (Bangladesh Standard Time)
 */
function signalrStateManager(t) { "use strict"; function e() { var e = $(t.recordContentSelector); $(e).hide(), $(e).addClass(u.dataDomClass), a(), t.signOutButtonSelector && $(t.signOutButtonSelector).click(function() { sessionStorage.removeItem(u.storeKey) }), t.notificationOpenerSelector && t.notificationPanelSelector && $(document).click(function(e) { var n = $(e.target); n[0] == $(t.notificationOpenerSelector)[0] ? $(t.notificationPanelSelector).slideToggle("fast") : 0 == n.parents(t.notificationPanelSelector).length && n[0] != $(t.notificationPanelSelector)[0] && "none" != $(t.notificationPanelSelector).css("display") && $(t.notificationPanelSelector).slideUp("fast") }) } function n() { $.connection[t.signalrHubName].client[t.getRecordMethodName] = function(e) { var n = "string" == typeof e ? JSON.parse(e) : e; r(n, t.addAt); var o = s(n); t.addAt == u.addAt.bottom ? $(o).appendTo($("." + u.dataDomClass).parent()) : $(o).prependTo($("." + u.dataDomClass).parent()), t.counterSelector && i(1), "function" == typeof t.onRecordArrival && t.onRecordArrival(n) }, $.connection.hub.start().done(function() { "function" == typeof t.onSignalrInitialisation && t.onSignalrInitialisation(), !t.getListMethodName || d.rendered || f(u.storeKey) || o() }) } function o() { $.connection[t.signalrHubName].server[t.getListMethodName]().then(function(e) { var n; n = "string" == typeof e ? JSON.parse(e) : e, l(u.storeKey, e), a(), "function" == typeof t.onGetList && t.onGetList(n) }) } function a() { var e = f(u.storeKey); if(e) { d.rendered = !0; for(var n, o = 0; o < e.length; o++) n = s(e[o]), $(n).appendTo($("." + u.dataDomClass).parent()); t.counterSelector && i(e.length) } } function i(e) { var n = $(t.counterSelector); if("INPUT" == n[0].tagName.toUpperCase()) { var o = parseInt($(n).val()); o || (o = 0), $(n).val(o + e) } else { var o = parseInt($(n).html()); o || (o = 0), $(n).html(o + e) } } function r(t, e) { var n = f(u.storeKey); n && (e == u.addAt.bottom ? n.push(t) : n.unshift(t)), l(u.storeKey, n) } function s(e) { var n = $("." + u.dataDomClass).clone(); n.removeClass(u.dataDomClass), n.show(); var o = n[0].outerHTML; for(var a in e) { var i = e[a]; t.dateTimeFieldName && t.dateTimeFieldName == a && (i = c(e[a], !1)); var r = new RegExp("\\[\\[" + a + "\\]\\]", "gim"); o = o.replace(r, i) } return o } function c(t, e) { var n = new Date(t.indexOf("Date(") >= 0 ? parseInt(t.slice(6, -2)) : t + " GMT+0000"), o = new Date; return t = (n.getHours() % 12 || 12) + ":" + (n.getMinutes() < 10 ? "0" + n.getMinutes() : n.getMinutes()) + " " + (n.getHours() < 12 ? "AM" : "PM"), t = (n.toDateString() == o.toDateString() ? "" : n.toLocaleDateString() + (e ? "<br/>" : " ")) + t } function l(t, e) { if(sessionStorage) { var n = null; if(e) { var n, o; o = "string" == typeof e ? o = JSON.parse(e) : e, n = escape(JSON.stringify(o)) } sessionStorage.setItem(t, n) } } function f(t) { if(sessionStorage) { var e = null, n = sessionStorage.getItem(t); return n && (e = JSON.parse(unescape(n))), e } } var u = { pluginInit: new Date, maxWait: 1e5, dataDomClass: "signalNotificationDom", storeKey: "signalNotificationData", addAt: { top: "top", bottom: "bottom" } }, d = { rendered: !1 }; $(function() { e(), n() }) }